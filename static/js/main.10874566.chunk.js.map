{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["api","App","useState","query","setQuery","weather","setWeather","className","main","temp","type","placeholder","onChange","e","target","value","onKeyPress","evt","key","fetch","then","res","json","result","console","log","name","sys","country","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Date","Math","round","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0LAAe,I,YCITA,EACA,mCADAA,EAEC,2CA8EQC,MA3Ef,WAEE,MAAuBC,mBAAS,IAAhC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA2BF,mBAAS,IAApC,mBAAOG,EAAP,KAAeC,EAAf,KAoCA,OACE,qBAAKC,UAAmC,oBAAhBF,EAAQG,MAAyBH,EAAQG,KAAKC,KAAO,GAAM,WAAoB,MAAvG,SACE,iCACE,qBAAKF,UAAU,aAAf,SAEE,uBAAOG,KAAK,OACZH,UAAU,aACVI,YAAY,WACZC,SAAU,SAAAC,GAAC,OAAET,EAASS,EAAEC,OAAOC,QAC/BA,MAAOZ,EACPa,WA5CM,SAAAC,GACC,UAAVA,EAAIC,KACLC,MAAM,GAAD,OAAInB,EAAJ,qBAAyBG,EAAzB,+BAAqDH,IACzDoB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJjB,EAAWiB,GACXnB,EAAS,IACToB,QAAQC,IAAIF,WAwCa,oBAAhBlB,EAAQG,KAClB,gCACG,sBAAKD,UAAU,eAAf,UACA,sBAAKA,UAAU,WAAf,UAA2BF,EAAQqB,KAAnC,IAA0CrB,EAAQsB,IAAIC,WACtD,qBAAKrB,UAAU,OAAf,SAlCW,SAACsB,GAClB,IAIIC,EAFK,CAAC,SAAS,SAAS,UAAU,YAAY,WAAW,SAAS,YAEzDD,EAAEE,UACXC,EAAKH,EAAEI,UACPC,EANO,CAAC,UAAU,WAAW,QAAQ,QAAQ,MAAM,OAAO,OAC9D,SAAS,YAAY,UAAU,WAAW,YAKzBL,EAAEM,YACfC,EAAKP,EAAEQ,cAEX,MAAM,GAAN,OAAUP,EAAV,YAAiBE,EAAjB,YAAyBE,EAAzB,YAAkCE,GAwBLE,CAAa,IAAIC,WAG1C,sBAAKhC,UAAU,cAAf,UACE,sBAAKA,UAAU,OAAf,UACGiC,KAAKC,MAAMpC,EAAQG,KAAKC,MAD3B,WAGA,qBAAKF,UAAU,UAAf,SAA0BF,EAAQA,QAAQ,GAAGG,aAG1C,SC/DEkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.10874566.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport {useState} from 'react';\nconst api={\n  key:\"a0b8b80d2f4858740c18c30590fc469f\",\n  base:\"https://api.openweathermap.org/data/2.5/\"\n}\n\nfunction App() {\n\n  const [query,setQuery]=useState('');\n  const [weather,setWeather]=useState({});\n\n  const search =evt => {\n    if(evt.key===\"Enter\"){\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n      .then(res => res.json())\n      .then(result =>{ \n        setWeather(result);\n        setQuery('');\n        console.log(result);\n      \n      });\n    \n    }\n  }\n  \n\n\n\n  const dateBuilder =(d) =>{\n    let months=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\n    \"August\",\"September\",\"October\",\"November\",\"December\"];\n    let days=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];\n\n    let day=days[d.getDay()];\n    let date=d.getDate();\n    let month=months[d.getMonth()];\n    let year=d.getFullYear();\n\n    return `${day} ${date} ${month} ${year}`\n\n\n\n\n\n  }\n  return (\n    <div className={(typeof weather.main != \"undefined\") ? ((weather.main.temp > 16) ? 'app warm' : 'app'):'app'}>\n      <main>\n        <div className=\"search-box\">\n        \n          <input type=\"text\"\n          className=\"search-bar\"\n          placeholder=\"search..\"\n          onChange={e=>setQuery(e.target.value)}\n          value={query}\n          onKeyPress={search}\n          />\n        </div>\n        {(typeof weather.main != \"undefined\") ? (\n       <div>\n          <div className=\"location-box\">\n          <div className=\"location\">{weather.name},{weather.sys.country}</div>\n          <div className=\"date\">{dateBuilder (new Date())}</div>\n\n        </div>\n        <div className=\"weather-box\">\n          <div className=\"temp\">\n            {Math.round(weather.main.temp)}Â°c\n          </div>\n          <div className=\"weather\">{weather.weather[0].main}</div>\n        </div>\n       </div>\n        ) : ('')}\n\n      </main>\n    </div>\n\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}